//  缪(0) 奇(1) 鹏(2)

#include"SSD1306Wire.h"
SSD1306Wire display(0x3c,2,14);

// const uint8_t miao[]=
// {0x20,0x22,0x30,0x67,0xAC,0x22,0x63,0x12,0x10,0x12,0x2A,0x81,0x12,0x95,0x82,0x94,
// 0xBE,0x52,0x40,0x4A,0x2A,0x29,0x52,0x24,0x82,0x10,0x3E,0x09,0x00,0x01,0x00,0x00};/*"缪",0*/
// const uint8_t qi[]=
// {0x40,0x00,0x40,0x00,0x44,0x00,0x44,0x1E,0x64,0x12,0x54,0x12,0x4C,0x12,0x47,0x12,
// 0x4C,0x1E,0x54,0x40,0x64,0x80,0xC4,0x7F,0x44,0x00,0x40,0x00,0x40,0x00,0x00,0x00};/*"奇",1*/
// const uint8_t peng[]=
// {0x00,0x60,0xFE,0x1F,0x22,0x22,0xFE,0xBF,0x00,0x40,0xFE,0x3F,0x22,0x82,0xFE,0xFF,
// 0x00,0x00,0xFC,0x13,0x16,0x12,0x25,0x12,0x84,0x52,0xFC,0x82,0x00,0x7E,0x00,0x00};/*"鹏",2*/

//  缪(0)
// const uint8_t miao[]=
// {
// 0x10,0x17,0x20,0x24,0x4A,0xF4,0x10,0x21,0x46,0xF8,0x43,0x00,0x1B,0xE0,0x40,0x07,
// 0x00,0xBC,0x84,0xA4,0x94,0xA4,0x50,0x88,0x26,0xC0,0x10,0x64,0x88,0x30,0xC0,0x00,/*"缪",0*/

// };


//  缪(0)
// 阳码 逐行式子 顺着方向
// 阳码 绝对不对
 const uint8_t miao[]=
{
0xEF,0xFF,0xE8,0x43,0xDF,0x7B,0xDB,0x5B,0xB5,0x6B,0x0B,0x5B,0xEF,0xAF,0xDE,0x77,
0xB9,0xD9,0x07,0x3F,0xBC,0xEF,0xFF,0x9B,0xE4,0x77,0x1F,0xCF,0xBF,0x3F,0xF8,0xFF,/*"缪",0*/

};


//  缪(0)
// 阳码 逐列式子 顺着方向
  const uint8_t miaoYangZhuLieShun[]=
{
0xFB,0xBB,0xF3,0x19,0xCA,0xBB,0x39,0xB7,0xF7,0xB7,0xAB,0x7E,0xB7,0x56,0xBE,0xD6,
0x82,0xB5,0xFD,0xAD,0xAB,0x6B,0xB5,0xDB,0xBE,0xF7,0x83,0x6F,0xFF,0x7F,0xFF,0xFF,/*"缪",0*/

};

// 阳码 列行 顺着方向
  const uint8_t miaoYangLieHangShun[]=
//  缪(0)
{
0xFB,0xF3,0xCA,0x39,0xF7,0xAB,0xB7,0xBE,0x82,0xFD,0xAB,0xB5,0xBE,0x83,0xFF,0xFF,
0xBB,0x19,0xBB,0xB7,0xB7,0x7E,0x56,0xD6,0xB5,0xAD,0x6B,0xDB,0xF7,0x6F,0x7F,0xFF,/*"缪",0*/

};


//  缪(0)
// 阳码 行列 顺着方向
  const uint8_t miaoYangHangLieShun[]=
{
0xEF,0xE8,0xDF,0xDB,0xB5,0x0B,0xEF,0xDE,0xB9,0x07,0xBC,0xFF,0xE4,0x1F,0xBF,0xF8,
0xFF,0x43,0x7B,0x5B,0x6B,0x5B,0xAF,0x77,0xD9,0x3F,0xEF,0x9B,0x77,0xCF,0x3F,0xFF,/*"缪",0*/

};

//  缪(0)
// 阴码 追逐列 逆
  const uint8_t miaoYinZhuLieNi[]=
{
0x20,0x22,0x30,0x67,0xAC,0x22,0x63,0x12,0x10,0x12,0x2A,0x81,0x12,0x95,0x82,0x94,
0xBE,0x52,0x40,0x4A,0x2A,0x29,0x52,0x24,0x82,0x10,0x3E,0x09,0x00,0x01,0x00,0x00,/*"缪",0*/

};

//  缪(0)
   const uint8_t miaoYinZhuHangNi[]=
{
0x08,0x00,0xE8,0x3D,0x04,0x21,0x24,0x25,0x52,0x29,0x2F,0x25,0x08,0x0A,0x84,0x11,
0x62,0x64,0x1F,0x03,0xC2,0x08,0x00,0x26,0xD8,0x11,0x07,0x0C,0x02,0x03,0xE0,0x00,/*"缪",0*/

};


//  缪(0)
    const uint8_t miaoYinLieHangNi[]=
{
0x20,0x30,0xAC,0x63,0x10,0x2A,0x12,0x82,0xBE,0x40,0x2A,0x52,0x82,0x3E,0x00,0x00,
0x22,0x67,0x22,0x12,0x12,0x81,0x95,0x94,0x52,0x4A,0x29,0x24,0x10,0x09,0x01,0x00,/*"缪",0*/

};


//  缪(0)
    const uint8_t miaoHangLieNi[]=
{
0x08,0xE8,0x04,0x24,0x52,0x2F,0x08,0x84,0x62,0x1F,0xC2,0x00,0xD8,0x07,0x02,0xE0,
0x00,0x3D,0x21,0x25,0x29,0x25,0x0A,0x11,0x64,0x03,0x08,0x26,0x11,0x0C,0x03,0x00,/*"缪",0*/

};

//  缪(0)
    const uint8_t miaoZhuLieNi[]=
{
0x20,0x22,0x30,0x67,0xAC,0x22,0x63,0x12,0x10,0x12,0x2A,0x81,0x12,0x95,0x82,0x94,
0xBE,0x52,0x40,0x4A,0x2A,0x29,0x52,0x24,0x82,0x10,0x3E,0x09,0x00,0x01,0x00,0x00,/*"缪",0*/

};

//  缪(0)
     const uint8_t miaoZhuHangShun[]=
{
0x10,0x00,0x17,0xBC,0x20,0x84,0x24,0xA4,0x4A,0x94,0xF4,0xA4,0x10,0x50,0x21,0x88,
0x46,0x26,0xF8,0xC0,0x43,0x10,0x00,0x64,0x1B,0x88,0xE0,0x30,0x40,0xC0,0x07,0x00,/*"缪",0*/

};




//  奇(0)
// 阴码 行列式 顺着方向
// const uint8_t qi[]=
// {
// 0x01,0x01,0x3F,0x02,0x04,0x08,0xFF,0x00,0x00,0x1F,0x10,0x10,0x1F,0x00,0x00,0x00,
// 0x00,0x00,0xF8,0x80,0x40,0x20,0xFE,0x10,0x10,0x90,0x90,0x90,0x90,0x10,0x50,0x20,/*"奇",0*/

// };

//  奇(0)
// 阴码 逐行式子 顺着方向
// const uint8_t qi[]=
// {
// 0x01,0x00,0x01,0x00,0x3F,0xF8,0x02,0x80,0x04,0x40,0x08,0x20,0xFF,0xFE,0x00,0x10,
// 0x00,0x10,0x1F,0x90,0x10,0x90,0x10,0x90,0x1F,0x90,0x00,0x10,0x00,0x50,0x00,0x20,/*"奇",0*/

// };

//  奇(0)
const uint8_t qi[]=
{
0x80,0x00,0x80,0x00,0xFC,0x1F,0x40,0x01,0x20,0x02,0x10,0x04,0xFF,0x7F,0x00,0x08,
0x00,0x08,0xF8,0x09,0x08,0x09,0x08,0x09,0xF8,0x09,0x00,0x08,0x00,0x0A,0x00,0x04,/*"奇",0*/

};



//  鹏(0)
// const uint8_t peng[]=
// {
// 0x00,0x77,0x55,0x55,0x55,0x77,0x55,0x55,0x55,0x77,0x55,0x55,0x55,0xB5,0x89,0x13,
// 0x10,0x20,0x7C,0x44,0x64,0x54,0x44,0x4C,0x40,0x7E,0x02,0x02,0x7A,0x02,0x0A,0x04,/*"鹏",0*/

// };


//  鹏(0)
// 阴码 列行式子 顺着方向
//  const uint8_t peng[]=
// {
// 0x00,0x7F,0x44,0x7F,0x00,0x7F,0x44,0x7F,0x00,0x3F,0x68,0xA4,0x21,0x3F,0x00,0x00,
// 0x06,0xF8,0x44,0xFD,0x02,0xFC,0x41,0xFF,0x00,0xC8,0x48,0x48,0x4A,0x41,0x7E,0x00,/*"鹏",0*/

// };

//  鹏(0)
 const uint8_t peng[]=
{
0x00,0x08,0xEE,0x04,0xAA,0x3E,0xAA,0x22,0xAA,0x26,0xEE,0x2A,0xAA,0x22,0xAA,0x32,
0xAA,0x02,0xEE,0x7E,0xAA,0x40,0xAA,0x40,0xAA,0x5E,0xAD,0x40,0x91,0x50,0xC8,0x20,/*"鹏",0*/

};




// 不能用char 要 uint8_t
//  缪(0) 奇(1) 鹏(2)
// const uint8_t*
// 用这一串 是只会一个字，而且 位置不对 ，方向不对
// const uint8_t name[]={
// // const char name[]={
// 0x20,0x22,0x30,0x67,0xAC,0x22,0x63,0x12,0x10,0x12,0x2A,0x81,0x12,0x95,0x82,0x94,
// 0xBE,0x52,0x40,0x4A,0x2A,0x29,0x52,0x24,0x82,0x10,0x3E,0x09,0x00,0x01,0x00,0x00,/*"缪",0*/

// 0x40,0x00,0x40,0x00,0x44,0x00,0x44,0x1E,0x64,0x12,0x54,0x12,0x4C,0x12,0x47,0x12,
// 0x4C,0x1E,0x54,0x40,0x64,0x80,0xC4,0x7F,0x44,0x00,0x40,0x00,0x40,0x00,0x00,0x00,/*"奇",1*/

// 0x00,0x60,0xFE,0x1F,0x22,0x22,0xFE,0xBF,0x00,0x40,0xFE,0x3F,0x22,0x82,0xFE,0xFF,
// 0x00,0x00,0xFC,0x13,0x16,0x12,0x25,0x12,0x84,0x52,0xFC,0x82,0x00,0x7E,0x00,0x00,/*"鹏",2*/

// };

//  缪(0) 奇(1) 鹏(2)
const uint8_t name[]={
0x10,0x17,0x20,0x24,0x4A,0xF4,0x10,0x21,0x46,0xF8,0x43,0x00,0x1B,0xE0,0x40,0x07,
0x00,0xBC,0x84,0xA4,0x94,0xA4,0x50,0x88,0x26,0xC0,0x10,0x64,0x88,0x30,0xC0,0x00,/*"缪",0*/

0x01,0x01,0x3F,0x02,0x04,0x08,0xFF,0x00,0x00,0x1F,0x10,0x10,0x1F,0x00,0x00,0x00,
0x00,0x00,0xF8,0x80,0x40,0x20,0xFE,0x10,0x10,0x90,0x90,0x90,0x90,0x10,0x50,0x20,/*"奇",1*/

0x00,0x77,0x55,0x55,0x55,0x77,0x55,0x55,0x55,0x77,0x55,0x55,0x55,0xB5,0x89,0x13,
0x10,0x20,0x7C,0x44,0x64,0x54,0x44,0x4C,0x40,0x7E,0x02,0x02,0x7A,0x02,0x0A,0x04,/*"鹏",2*/

};


void setup() {
  // put your setup code here, to run once:
 
  display.init();


}

void loop() {
  // put your main code here, to run repeatedly:

  display.clear();
  // SSD1306Wire 中文 倒过来
  //  display.drawIco16x16(0,0,name,0);
  //  换了方向 还是不行
  //  字模方向
  // https://blog.csdn.net/michaelzhouh/article/details/103183851
  // display.drawIco16x16(0,0,miao,0);
  // display.drawIco16x16(20,0,qi,0);
  //    display.drawIco16x16(40,0,peng,0);
  //      display.drawIco16x16(60,0,miaoYangZhuLieShun,0);
  //     //  这个感觉差不多 但是 上下 反了  miaoYangZhuLieShun
  // display.drawIco16x16(80,0,miaoYangLieHangShun,0);
  //    display.drawIco16x16(100,0,miaoYangHangLieShun,0);


  // display.drawIco16x16(120,0,miaoYinZhuLieNi,0);
  // display.drawIco16x16(0,0,miaoYinZhuHangNi,0);
  // // 逐行  逆 是可以的
  // display.drawIco16x16(20,0,miaoYinLieHangNi,0);
  //    display.drawIco16x16(40,0,miaoHangLieNi,0);
  //      display.drawIco16x16(60,0,miaoZhuLieNi,0);
  //     //  这个感觉差不多 但是 上下 反了
  // display.drawIco16x16(80,0,miaoZhuHangShun,0);
  //    display.drawIco16x16(100,0,miaoYangHangLieShun,0);

  display.drawIco16x16(0,0,miaoYinZhuHangNi,0);
  // 逐行  逆 是可以的
  display.drawIco16x16(20,0,qi,0);
     display.drawIco16x16(40,0,peng,0);

  // 显示中文 SSD1306Wire
  // https://blog.csdn.net/whqsz/article/details/79308526

  display.drawString(0,20,"31901077");
  display.display();
  delay(2000);
 

}
